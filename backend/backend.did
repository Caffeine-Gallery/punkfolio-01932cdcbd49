type TransferArgs = 
 record {
   amount: nat;
   created_at_time: opt nat64;
   fee: opt nat;
   from_subaccount: opt vec nat8;
   memo: opt vec nat8;
   to: Account;
 };
type Result = 
 variant {
   err: text;
   ok: nat;
 };
type Holder = 
 record {
   address: text;
   count: nat;
 };
type Distribution = 
 record {
   count: nat;
   range: text;
 };
type Account = 
 record {
   owner: principal;
   subaccount: opt vec nat8;
 };
service : {
  getDistribution: () -> (vec Distribution) query;
  getHolders: () -> (vec Holder) query;
  icrc1_balance_of: (Account) -> (nat) query;
  icrc1_decimals: () -> (nat8) query;
  icrc1_name: () -> (text) query;
  icrc1_symbol: () -> (text) query;
  icrc1_total_supply: () -> (nat) query;
  icrc1_transfer: (TransferArgs) -> (Result);
}
